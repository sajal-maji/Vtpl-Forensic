syntax = "proto3";

package vtpl_grpc_server;
import "job.proto";
import "channel.proto";
import "adjust.proto";
import "extract.proto";
import "pdf_generate.proto";
import "measure.proto";
import "edit.proto";
import "sharpen.proto";
import "denoise.proto";
import "stablization.proto";
import "abort.proto";
service ChannelService {
    rpc GrayscaleFilter (GrayScaleRequest) returns (JobStatusResponse);
    rpc ColorSwitchFilter (ColorSwitchRequest) returns (JobStatusResponse);
    rpc ColorConversionFilter (ColorConversionRequest) returns (JobStatusResponse);
    rpc ExtractSingleChannelFilter (ExtractSingleChannelRequest) returns (JobStatusResponse);
    rpc DisplaySelectedChannelFilter (DisplaySlectedChannelRequest) returns (JobStatusResponse);
    rpc GetJobStatus (JobStatusRequest) returns (JobStatusResponse); 
}

service AdjustService {
    rpc LevelControlFilter(LevelControlRequest) returns (JobStatusResponse);
    rpc ContrastStretchFilter(ContrastStretchRequest) returns(JobStatusResponse);
    rpc ClaheFilter(ClaheRequest) returns(JobStatusResponse);
    rpc BrightnessContrastChangeFilter(BrightnessContrastChangeRequest) returns(JobStatusResponse);
    rpc IntensityChangeFilter(IntensityChangeRequest) returns(JobStatusResponse);
    rpc HueSatValChangeFilter(HueSatValChangeRequest) returns(JobStatusResponse);
    rpc SaturationChangeFilter(SaturationChangeRequest) returns(JobStatusResponse);
    rpc HueChangeFilter(HueChangeRequest) returns(JobStatusResponse);
    rpc ExposureControlFilter(ExposureControlRequest) returns(JobStatusResponse);
    rpc CurveFilter(CurveRequest) returns(JobStatusResponse);
    rpc HistogramEqualizationFilter(HistogramEqualizationRequest) returns(JobStatusResponse);
}

service ExtractService {
    rpc NegativeFilter(NegativeRequest) returns (JobStatusResponse);
    rpc ThresholdFilter(ThresholdRequest) returns (JobStatusResponse);
    rpc AdaptiveThresholdFilter(AdaptiveThresholdRequest) returns (JobStatusResponse);
    rpc LaplaceFilter(LaplaceRequest) returns (JobStatusResponse);
    rpc PrewittFilter(PrewittRequest) returns (JobStatusResponse);
    rpc SobelFilter(SobelRequest) returns (JobStatusResponse);
    rpc ScharrFilter(ScharrRequest) returns (JobStatusResponse);
    rpc CannyFilter(CannyRequest) returns (JobStatusResponse);
    rpc LinearFilter(LinearRequest) returns (JobStatusResponse);
    rpc BiLinearFilter(BiLinearRequest) returns (JobStatusResponse);
    rpc ChannelSelectorFilter(ChannelSelectorRequest) returns (JobStatusResponse);
    rpc ChannelDemuxFilter(ChannelDemuxRequest) returns (JobStatusResponse);
    rpc FourierFilter(FourierRequest) returns (JobStatusResponse);
}

service PDFGenerateService{
    rpc PDFGeneretion(PDFGenerateRequest) returns (PDFGenerateResponse);
}

service MeasureService{
    rpc MeasureOneD (MeasureOneDRequest) returns (MeasureResponse);
    rpc MeasureTwoD (MeasureTwoDRequest) returns (MeasureResponse);
    rpc MeasureThreeD (MeasureThreeDRequest) returns (MeasureResponse);
}

service EditService{
    rpc CropFilter (CropRequest) returns (JobStatusResponse);
    rpc FlipFilter (FlipRequest) returns (JobStatusResponse);
    rpc RotateFilter (RotateRequest) returns (JobStatusResponse);
    rpc ResizeFilter (ResizeRequest) returns (JobStatusResponse);
    rpc PerspectiveFilter (PerspectiveRequest) returns (JobStatusResponse);
    rpc UndistortFilter (UndistortRequest) returns (JobStatusResponse);
    rpc AspectRatioFilter (AspectRatioRequest) returns (JobStatusResponse);
    rpc FisheyeFilter (FisheyeRequest) returns (JobStatusResponse);  
    rpc SmartResizeFilter (SmartResizeRequest) returns (JobStatusResponse);  
}
service SharpenService{
    rpc LaplacianFilter (LaplacianSharpenRequest) returns (JobStatusResponse);
    rpc UnsharpMaskFilter (UnsharpMaskRequest) returns (JobStatusResponse);
}

service DenoiseService{
    rpc AveragingFilter (AveragingRequest) returns (JobStatusResponse);
    rpc GaussianSmoothingFilter (GaussianSmoothingRequest) returns (JobStatusResponse);
    rpc BilateralFilter (BilateralFilteringRequest) returns (JobStatusResponse);
    rpc MedianFilter (MedianFilteringRequest) returns (JobStatusResponse);
    rpc WienerFilter (WienerRequest) returns (JobStatusResponse);
}
service StablizationService{
    rpc LocalStablizationFilter (LocalStabilizationRequest) returns (JobStatusResponse);
    rpc GlobalStablizationFilter (GlobalStabilizationRequest) returns (JobStatusResponse);

}

service AbortService{
    rpc AbortProcess (AbortRequest) returns (AbortResponse);
}