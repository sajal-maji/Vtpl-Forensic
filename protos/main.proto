syntax = "proto3";

package vtpl_grpc_server;
import "job.proto";
import "channel.proto";
import "adjust.proto";
import "extract.proto";
import "pdf_generate.proto";
import "measure.proto";
service ChannelService {
    rpc GrayscaleFilter (GrayScaleRequest) returns (JobStatusResponse);
    rpc ColorSwitchFilter (ColorSwitchRequest) returns (JobStatusResponse);
    rpc ColorConversionFilter (ColorConversionRequest) returns (JobStatusResponse);
    rpc ExtractSingleChannelFilter (ExtractSingleChannelRequest) returns (JobStatusResponse);
    rpc DisplaySelectedChannelFilter (DisplaySlectedChannelRequest) returns (JobStatusResponse);
    rpc GetJobStatus (JobStatusRequest) returns (JobStatusResponse); 
}

service AdjustService {
    rpc LevelControlFilter(LevelControlRequest) returns (JobStatusResponse);
    rpc ContrastStretchFilter(ContrastStretchRequest) returns(JobStatusResponse);
    rpc ClaheFilter(ClaheRequest) returns(JobStatusResponse);
    rpc BrightnessContrastChangeFilter(BrightnessContrastChangeRequest) returns(JobStatusResponse);
    rpc IntensityChangeFilter(IntensityChangeRequest) returns(JobStatusResponse);
    rpc HueSatValChangeFilter(HueSatValChangeRequest) returns(JobStatusResponse);
    rpc SaturationChangeFilter(SaturationChangeRequest) returns(JobStatusResponse);
    rpc HueChangeFilter(HueChangeRequest) returns(JobStatusResponse);
    rpc ExposureControlFilter(ExposureControlRequest) returns(JobStatusResponse);
    rpc CurveFilter(CurveRequest) returns(JobStatusResponse);
    rpc HistogramEqualizationFilter(HistogramEqualizationRequest) returns(JobStatusResponse);
}

service ExtractService {
    rpc NegativeFilter(NegativeRequest) returns (JobStatusResponse);
    rpc ThresholdFilter(ThresholdRequest) returns (JobStatusResponse);
    rpc AdaptiveThresholdFilter(AdaptiveThresholdRequest) returns (JobStatusResponse);
    rpc LaplaceFilter(LaplaceRequest) returns (JobStatusResponse);
    rpc PrewittFilter(PrewittRequest) returns (JobStatusResponse);
    rpc SobelFilter(SobelRequest) returns (JobStatusResponse);
    rpc ScharrFilter(ScharrRequest) returns (JobStatusResponse);
    rpc CannyFilter(CannyRequest) returns (JobStatusResponse);
    rpc LinearFilter(LinearRequest) returns (JobStatusResponse);
    rpc BiLinearFilter(BiLinearRequest) returns (JobStatusResponse);
    rpc ChannelSelectorFilter(ChannelSelectorRequest) returns (JobStatusResponse);
    rpc ChannelDemuxFilter(ChannelDemuxRequest) returns (JobStatusResponse);
    rpc FourierFilter(FourierRequest) returns (JobStatusResponse);
}

service PDFGenerateService{
    rpc PDFGeneretion(PDFGenerateRequest) returns (PDFGenerateResponse);
}

service MeasureService{
    rpc MeasureOneD (MeasureOneDRequest) returns (MeasureResponse);
    rpc MeasureTwoD (MeasureTwoDRequest) returns (MeasureResponse);
    rpc MeasureThreeD (MeasureThreeDRequest) returns (MeasureResponse);
}